[{"D:\\gist-api\\src\\index.js":"1","D:\\gist-api\\src\\App.js":"2","D:\\gist-api\\src\\reportWebVitals.js":"3","D:\\gist-api\\src\\components\\OwnerDetails.compoent.js":"4","D:\\gist-api\\src\\api\\gist-api.js":"5","D:\\gist-api\\src\\components\\FileDetails.component.js":"6","D:\\gist-api\\src\\components\\Header.component.js":"7","D:\\gist-api\\src\\config\\api_config.js":"8","D:\\gist-api\\src\\components\\NotFound.js":"9","D:\\gist-api\\src\\components\\UserNotFound.js":"10"},{"size":517,"mtime":1655752296827,"results":"11","hashOfConfig":"12"},{"size":2205,"mtime":1655759245715,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1655752296827,"results":"14","hashOfConfig":"12"},{"size":1388,"mtime":1655756664561,"results":"15","hashOfConfig":"12"},{"size":593,"mtime":1655752296824,"results":"16","hashOfConfig":"12"},{"size":1743,"mtime":1655755964682,"results":"17","hashOfConfig":"12"},{"size":814,"mtime":1655756185106,"results":"18","hashOfConfig":"12"},{"size":54,"mtime":1655752296825,"results":"19","hashOfConfig":"12"},{"size":213,"mtime":1655758642123,"results":"20","hashOfConfig":"12"},{"size":218,"mtime":1655756359606,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"163lm7",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\gist-api\\src\\index.js",[],"D:\\gist-api\\src\\App.js",["46"],"D:\\gist-api\\src\\reportWebVitals.js",[],"D:\\gist-api\\src\\components\\OwnerDetails.compoent.js",["47","48"],"import { useEffect, useState } from \"react\";\r\nimport { getGistForked } from './../api/gist-api';\r\nimport UserNotFound from \"./UserNotFound\";\r\n\r\nconst  OwnerDetails = (props)  => {\r\n  const [userCommit, setUserCommits] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const forkedData = await getGistForked(props.id);\r\n    forkedData.sort((a, b) => {\r\n      return new Date(b.committed_at) - new Date(a.committed_at);\r\n    });\r\n    const lastCommits = forkedData.splice(0, 3);\r\n    setUserCommits(lastCommits);\r\n  }, [props.id])\r\n  return (\r\n    <div className='col-12'>\r\n      <p className='text-success'><b>Last forked users</b></p>\r\n      <ul className=\"list-group\">\r\n        {\r\n          userCommit && (\r\n            userCommit.map((commits, index) => {\r\n              return (\r\n                <li className=\"list-group-item custom-font avatar-li\" key={index}>\r\n                  <div className=\"center\">\r\n                    <img src={commits.owner.avatar_url} className='avatar ml-3 mr-3' />\r\n                  </div>\r\n                  <div className=\"center mt-2\">\r\n                    <b>{commits.owner.login}</b>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })\r\n          )\r\n        }\r\n      </ul>\r\n\r\n      {\r\n        !userCommit.length > 0 && (\r\n         <UserNotFound/>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default OwnerDetails;\r\n",["49","50"],"D:\\gist-api\\src\\api\\gist-api.js",["51"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { API_ENDPOINT } from '../config/api_config';\r\n\r\n// Setting default base url\r\naxios.defaults.baseURL = API_ENDPOINT;\r\n\r\n\r\nexport const getGist = async (username) => {\r\n    try {\r\n        const data = await axios.get(`users/${username}/gists`);\r\n        return data.data;\r\n    } catch (error) {\r\n        return []\r\n    }\r\n};\r\n\r\nexport const getGistForked = async (gistId) => {\r\n    try {\r\n        const data = await axios.get(`gists/${gistId}/forks`);\r\n        return data.data;\r\n    } catch (error) {\r\n        return []\r\n    }\r\n};","D:\\gist-api\\src\\components\\FileDetails.component.js",["52"],"import { useEffect, useState } from \"react\";\r\n\r\nconst FileDetails = (props) => {\r\n    const [languages, setLanguages] = useState({});\r\n    useEffect(() => {\r\n        const foundLanguages = [];\r\n        const foundFilesMapping = {};\r\n        Object.keys(props.files).map((fileKey) => {\r\n            if (foundLanguages.includes(props.files[fileKey].language)) {\r\n                foundFilesMapping[props.files[fileKey].language].push(props.files[fileKey].filename)\r\n            } else {\r\n                foundLanguages.push(props.files[fileKey].language)\r\n                foundFilesMapping[props.files[fileKey].language] = [props.files[fileKey].filename]\r\n            }\r\n        })\r\n        setLanguages(foundFilesMapping);\r\n    }, [props.files]);\r\n    return (\r\n        <div className='col-12'>\r\n            <p className=\"text-success\"> <b>Modified files</b></p>\r\n            <div className=\"card\">\r\n                <div className=\"card-body d-flex\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {\r\n                            languages && (\r\n                                Object.keys(languages).map((keyItem, index) => {\r\n                                    return (\r\n                                        <li className=\"list-group-item custom-font\" key={index}>\r\n                                            <b className='language-name'>{keyItem} : </b>  {languages[keyItem].join(', ')}\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FileDetails;\r\n","D:\\gist-api\\src\\components\\Header.component.js",[],"D:\\gist-api\\src\\config\\api_config.js",[],"D:\\gist-api\\src\\components\\NotFound.js",[],"D:\\gist-api\\src\\components\\UserNotFound.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":8,"column":13,"nodeType":"59","endLine":15,"endColumn":4},{"ruleId":"60","severity":1,"message":"61","line":26,"column":21,"nodeType":"62","endLine":26,"endColumn":88},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"53","severity":1,"message":"67","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":8,"column":48,"nodeType":"59","messageId":"70","endLine":8,"endColumn":50},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]